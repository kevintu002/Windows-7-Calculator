{"version":3,"sources":["components/CalcDisplay.js","components/CalcKey.js","components/Calculator.js","index.js"],"names":["CalcDisplay","upperVal","lowerVal","className","id","data-testid","CalcKey","name","onClick","Calculator","useState","expression","setExpression","setLowerVal","mem","setMem","errorMsg","setErrorMsg","Array","fill","history","setHistory","cursor","setCursor","waitingForNewExpression","setWaitingForNewExpression","prevKey","setPrevKey","historyStart","setHistoryStart","operRegEx","RegExp","helpURL","useEffect","includes","length","document","getElementById","style","fontSize","handleClear","handleDigit","target","newDigit","test","prev","handleOperator","newOperator","newExpression","newLowerVal","slice","toString","myEval","concat","oldExpression","stringArr","evaluate","join","getAllNonEmptyHistories","filter","ii","setHistoryBGColorOf","index","color","historyPointer","getElementsByClassName","HTMLElement","backgroundColor","setHistoryIndexColor","setToSelected","handleHistory","displayIndex","handleKeyPress","e","key","ctrlKeyMap","q","p","m","r","l","c","v","shiftKeyMap","Enter","keyMap","Escape","Delete","Backspace","F9","ArrowUp","ArrowDown","PageUp","PageDown","ctrlKey","navigator","clipboard","writeText","readText","then","text","isNaN","Number","click","shiftKey","window","open","error","blur","addEventListener","removeEventListener","href","rel","nonEmptyHistory","map","i","borderBottom","sqrt","inv","lastOperator","lastOperand","allEmptyHistories","newHistory","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b0a7aae1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function CalcDisplay({upperVal, lowerVal}) {\r\n  return (\r\n    <div>\r\n      <div className=\"outer-div expression\">\r\n        <label \r\n          id=\"expression\" \r\n          className=\"inner-div small-text\" \r\n          data-testid=\"expression\">\r\n            {upperVal}\r\n        </label>\r\n      </div>\r\n      \r\n      <div className=\"outer-div\">\r\n        <label \r\n          id=\"lowerVal\" \r\n          className=\"inner-div large-text\" \r\n          data-testid=\"lowerVal\">\r\n            {lowerVal}\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function CalcKey({className='', name, id=name, onClick}) {\r\n  return (\r\n    <button \r\n      className={className} \r\n      id={id} \r\n      name={name} \r\n      onClick={onClick}>{name}\r\n    </button>\r\n  )\r\n}","import '../css/style.css';\nimport CalcDisplay from './CalcDisplay';\nimport CalcKey from './CalcKey';\nimport { useEffect, useState } from 'react';\nimport { evaluate, sqrt, inv } from 'mathjs';\n\nexport default function Calculator() {\n  const [expression, setExpression] = useState([])\n  const [lowerVal, setLowerVal] = useState('0')\n  const [mem, setMem] = useState('0')\n  const [errorMsg, setErrorMsg] = useState('')\n  const [history, setHistory] = useState(Array(5).fill([' ', ' ']))\n  const [cursor, setCursor] = useState(null)\n\n  const [waitingForNewExpression, setWaitingForNewExpression] = useState(false)\n  const [prevKey, setPrevKey] = useState(null)\n  const [historyStart, setHistoryStart] = useState(0)\n  const operRegEx = new RegExp('\\\\+|-|\\\\*|\\\\/')\n  const helpURL = 'https://github.com/Poplica/react-calculator/blob/master/README.md'\n\n  useEffect(() => {\n    if (['Infinity', 'NaN'].includes(lowerVal)) {\n      setErrorMsg('Cannot divide by zero')\n    } else if (lowerVal.includes('i')) {\n      setErrorMsg('Cannot sqrt negative')\n    }\n\n    if (lowerVal.length > 12) {\n      document.getElementById('lowerVal').style.fontSize = '16px'\n    }\n  }, [lowerVal])\n\n  useEffect(() => {\n    if (errorMsg) {\n      setLowerVal('')\n    }\n  }, [errorMsg])\n\n  const handleMClear = () => {\n    setMem('0')\n  }\n\n  const handleMRetrieve = () => {\n    if (!errorMsg) {\n      setLowerVal(mem)\n      setPrevKey('MR')\n    }\n  }\n\n  const handleMStore = () => {\n    if (!errorMsg) {\n      setMem(lowerVal)\n      if (!isNaN(prevKey)) {\n        setPrevKey('MS')\n      }\n    }\n  }\n\n  const handleMAdd = () => {\n    if (!errorMsg) {\n      setMem(myEval([mem, '+', lowerVal]))\n    }\n  }\n\n  const handleMSubtract = () => {\n    if (!errorMsg) {\n      setMem(myEval([mem, '-', lowerVal]))\n    }\n  }\n\n  const handleClear = () => {\n    setExpression([])\n    setLowerVal('0')\n    setPrevKey(null)\n    setErrorMsg('')\n    setWaitingForNewExpression(false)\n  }\n\n  const handleClearEntry = () => {\n    if (errorMsg) {\n      handleClear()\n    } else {\n      setLowerVal('0')\n      setPrevKey('CE')\n    }\n  }\n\n  const handleToggleSign = () => {\n    if (!errorMsg) {\n      setLowerVal(prev => `${Number(prev) * -1}`)\n      setPrevKey('toggleSign')\n    }\n  }\n\n  const handleSqrt = () => {\n    if (!errorMsg) {\n      setLowerVal(prev => `${sqrt(Number(prev))}`)\n      \n      setPrevKey('sqrtinv')\n    }\n  }\n\n  const handleInverse = () => {\n    if (!errorMsg) {\n      setLowerVal(prev => `${inv(Number(prev))}`)\n\n      setPrevKey('sqrtinv')\n    }\n  }\n  \n  const handlePercent = () => {\n    if (!errorMsg) {\n      if (expression.length > 1) {\n        if (operRegEx.test(expression.slice(-1).toString())) {\n          setLowerVal(prev => `${Number(myEval(expression.slice(0, -1))) * Number(prev) / 100}`)\n        } else {\n          setLowerVal(prev => `${Number(myEval(expression)) * Number(prev) / 100}`)\n        }\n      } else {\n        setLowerVal('0')\n      }\n\n      setPrevKey('percent')\n    }\n  }\n\n  const handleDelete = () => {\n    if (!errorMsg && prevKey !== '=' && lowerVal !== '0') {\n      setLowerVal(prev => prev.length === 1 ? '0' : prev.slice(0, -1))\n\n      setPrevKey('del')\n    }\n  }\n\n  const handleDot = () => {\n    if (!errorMsg && !lowerVal.includes('.')) {\n      if (prevKey === '=' || operRegEx.test(prevKey) \n        || (expression.length === 0 && lowerVal === '0')) {\n        // prepend 0 under special cases\n        setLowerVal('0.')\n      } else {\n        setLowerVal(prev => prev + '.')\n      }\n      \n      setWaitingForNewExpression(false)\n      setPrevKey('.')\n    }\n  }\n\n  const handleDigit = ({target}) => {\n    if (!errorMsg) {\n      const newDigit = target.name\n\n      if (!['=', 'MR', 'MS', 'hist', 'sqrtinv', 'percent'].includes(prevKey) \n        && !operRegEx.test(prevKey)) {\n        setLowerVal(prev => prev === '0' ? newDigit : prev + newDigit)\n      } else {\n        if (waitingForNewExpression) {\n          setExpression([])\n        }\n\n        setLowerVal(newDigit)\n      }\n\n      setWaitingForNewExpression(false)\n      setPrevKey(newDigit)\n    }\n  }\n\n  const handleOperator = ({target}) => {\n    if (!errorMsg) {\n      const newOperator = target.name\n      let newExpression = expression\n      let newLowerVal = lowerVal\n      \n      if (operRegEx.test(prevKey)) {\n        newExpression = [...expression.slice(0,-1), newOperator]\n      } else if (['.', 'CE', 'toggleSign', 'MR', 'hist', 'paste', 'sqrtinv', 'percent']\n        .includes(prevKey)) {\n        // existing expression with last item as operator will append the lower value and the newOperator\n        // otherwise replace the expression with the evaluation and the newOperator \n        if (lowerVal.slice(-1)[0] === '.') {\n          newLowerVal = lowerVal.slice(0,-1)\n        }\n\n        if (operRegEx.test(expression.slice(-1).toString())) {\n          newExpression = [...expression, newLowerVal]\n        } else {\n          newExpression = [newLowerVal]\n        }\n\n        newLowerVal = myEval(newExpression)\n        newExpression = newExpression.concat(newOperator)\n      } else if (prevKey === '=') {\n        // append to existing expression\n        newLowerVal = myEval(expression)\n        newExpression = [newLowerVal, newOperator]\n      } else {\n        // evaluate and display current expression with new operator\n        const oldExpression = [...expression, lowerVal]\n\n        newLowerVal = myEval(oldExpression)\n        newExpression = oldExpression.concat(newOperator)\n      }\n\n      setWaitingForNewExpression(false)\n      setExpression(newExpression)\n      setLowerVal(newLowerVal)\n      setPrevKey(newOperator)\n    }\n  }\n\n  // helper function. must pass an arr of strings. returns evaluation of the string\n  const myEval = (stringArr) => {\n    return evaluate(stringArr.join('')) + ''\n  }\n\n  const handleEqual = () => {\n    if (!errorMsg) {\n      let newExpression = expression\n      let newLowerVal = lowerVal\n\n      if (!operRegEx.test(expression.toString())) {\n        if (prevKey !== '.') {\n          newExpression = [lowerVal]\n        } else {\n          newExpression = [lowerVal.slice(0,-1)]\n          newLowerVal = lowerVal.slice(0,-1)\n        }\n      } else if (['.', 'CE', 'toggleSign', 'MR', 'hist', 'paste', 'sqrtinv', 'percent']\n        .includes(prevKey)) {\n        // existing expression with last item as operator will append the lowerVal to expression \n        // otherwise repeat expression on the lowerVal\n        if (lowerVal.slice(-1)[0] === '.') {\n          newLowerVal = lowerVal.slice(0,-1)\n        }\n\n        if (operRegEx.test(expression.slice(-1).toString())) {\n          newExpression = [...expression, newLowerVal]\n        } else {\n          // use last operator and operand on curr lowerVal\n          const [lastOperator, lastOperand] = expression.slice(-2)\n\n          newExpression = [newLowerVal, lastOperator, lastOperand]\n        }\n\n        newLowerVal = myEval(newExpression)\n      } else if (prevKey === '=') {\n        // repeat last operator and operand\n        const [lastOperator, lastOperand] = expression.slice(-2)\n\n        newExpression = [lowerVal, lastOperator, lastOperand]\n        newLowerVal = myEval([...expression, lastOperator, lastOperand])\n      } else {\n        newExpression = [...expression, lowerVal]\n        newLowerVal = myEval(newExpression)\n      }\n\n      let allEmptyHistories = history.filter(ii => ii[0] === ' ' && ii[1] === ' ')\n      let newHistory = history\n      if (allEmptyHistories.length !== 0) {\n        // edit history directly when there exists empty expressions\n        newHistory[5 - allEmptyHistories.length] = [newExpression.join(''), newLowerVal]\n        setCursor(5 - allEmptyHistories.length)\n      } else {\n        newHistory = newHistory.concat([[newExpression.join(''), newLowerVal]])\n        setCursor(4)\n        setHistoryStart(getAllNonEmptyHistories().length - 4)\n      }\n\n      setWaitingForNewExpression(true)\n      setHistory(newHistory)\n      setExpression(newExpression)\n      setLowerVal(newLowerVal)\n      setPrevKey('=')\n    }\n  }\n\n  // returns list of all non empty entries in history\n  const getAllNonEmptyHistories = () => {\n    return history.filter(ii => ii[0] !== ' ' && ii[1] !== ' ')\n  }\n\n  // sets background color of history display index to color\n  const setHistoryBGColorOf = (index, color) => {\n    const historyPointer = document.getElementsByClassName('history')[index]\n    if (historyPointer && historyPointer instanceof HTMLElement) {\n      historyPointer.style.backgroundColor = color\n    }\n  }\n\n  // sets font color of history display index to color\n  const setHistoryIndexColor = (index, color) => {\n    const historyPointer = document.getElementsByClassName('history')[index]\n    if (historyPointer && historyPointer instanceof HTMLElement) {\n      historyPointer.style.color = color\n    }\n  }\n\n  // sets index to selected style\n  const setToSelected = (index) => {\n    setHistoryIndexColor(index, 'white')\n    setHistoryBGColorOf(index, 'rgb(102, 132, 146)')\n  }\n  \n  // any key press after history has been selected should modify cursor style\n  useEffect(() => {\n    if (!['hist', '='].includes(prevKey)) {\n      // resets cursor focus\n      setHistoryIndexColor(cursor, 'black')\n      setHistoryBGColorOf(cursor, 'lightblue')\n    }\n\n    if (prevKey === 'hist') {\n      setToSelected(cursor)\n    }\n    if (prevKey === '=') {\n      setHistoryBGColorOf(cursor, 'lightblue')\n    }\n\n    return () => {\n      if (cursor !== null) {\n        // sets previous cursor's style to default\n        setHistoryIndexColor(cursor, 'black')\n        setHistoryBGColorOf(cursor, 'transparent')\n      }\n    }\n  })\n\n  const handleHistory = (displayIndex) => () => {\n    if (!errorMsg && history[displayIndex + historyStart][1] !== ' ' && cursor !== null) {\n      if (prevKey === '=') {\n        setWaitingForNewExpression(true)\n      }\n      setLowerVal(history[displayIndex + historyStart][1])\n      setPrevKey('hist')\n      setToSelected(displayIndex)\n      setCursor(displayIndex)\n    }\n  }\n\n  const moveCursorUp = () => {\n    if (!errorMsg && cursor !== null) {\n      if (cursor === 0) {\n        if (cursor + historyStart - 1 === -1) {\n          setLowerVal(history[0][1])\n        } else {\n          setHistoryStart(prev => prev - 1)\n          setLowerVal(history[cursor + historyStart - 1][1])\n        }\n\n        setToSelected(0)\n      } else {\n        handleHistory(cursor - 1)()\n      }\n\n      if (prevKey === '=') {\n        setWaitingForNewExpression(true)\n      }\n      setPrevKey('hist')\n    }\n  }\n\n  const moveCursorDown = () => {\n    if (!errorMsg && cursor !== null) {\n      const nonEmptyHistory = getAllNonEmptyHistories()\n\n      if (cursor + historyStart === nonEmptyHistory.length - 1) {\n        setLowerVal(history[cursor + historyStart][1])\n        setToSelected(cursor + historyStart)\n      } else if (cursor === 4) {\n        setHistoryStart(prev => prev + 1)\n        setLowerVal(history[cursor + historyStart + 1][1])\n      } else {\n        handleHistory(cursor + 1)()\n      }\n\n      if (prevKey === '=') {\n        setWaitingForNewExpression(true)\n      }\n      setPrevKey('hist')\n    }\n  }\n\n  const handleKeyPress = (e) => {\n    const key = e.key\n    const ctrlKeyMap = {\n      q: 'M-',\n      p: 'M+',\n      m: 'MS',\n      r: 'MR',\n      l: 'MC',\n      c: 'copy',\n      v: 'paste'\n    }\n    const shiftKeyMap = {\n      Enter: 'MS',\n      '=': '+',\n      '@': 'sqrt',\n      '%': '%'\n    }\n    const keyMap = {\n      Enter: '=',\n      r: 'inverse',\n      Escape: 'C',\n      Delete: 'CE',\n      Backspace: 'Del',\n      F9: 'toggleSign',\n      ArrowUp: 'up',\n      ArrowDown: 'down',\n      PageUp: 'up',\n      PageDown: 'down'\n    }\n    try {\n      if (e.ctrlKey && key in ctrlKeyMap) {\n        if (key === 'c') {\n          navigator.clipboard.writeText(lowerVal)\n        } else if (key === 'v') {\n          navigator.clipboard.readText().then(text => \n            setLowerVal(!isNaN(Number(text)) \n              ? text \n              : '0'\n          ))\n\n          setPrevKey('paste')\n        } else {\n          document.getElementById(ctrlKeyMap[key]).click()\n        }\n      } else if (e.shiftKey && key in shiftKeyMap) {\n        document.getElementById(shiftKeyMap[key]).click()\n      } else if (key === 'F1') {\n        window.open(helpURL, '_blank')\n      } else if (key in keyMap) {\n        document.getElementById(keyMap[key]).click()\n      } else {\n        document.getElementById(key).click()\n      }\n    } catch (error) {\n      // console.log(error)\n    }\n\n    e.target.blur()\n  }\n\n  useEffect(() => {\n    document.addEventListener('keyup', handleKeyPress)\n    return () => {\n      document.removeEventListener('keyup', handleKeyPress)\n    }\n  })\n\n  return (\n    <main className=\"calculator\">\n      <div className=\"menu\">\n        <a \n          target=\"_blank\"\n          href={helpURL}\n          rel=\"noopener noreferrer\"\n        >Help</a>\n      </div>\n\n      <div className=\"display\">\n        <div className=\" outer-div navigation\">\n          <CalcKey id=\"up\" name=\"&#x25B2;\" onClick={moveCursorUp}/>\n          <CalcKey id=\"down\" name=\"&#x25BC;\" onClick={moveCursorDown}/>\n        </div>\n        <div className=\"outer-div\">\n          {history.slice(historyStart, historyStart + 5).map((i, index) =>\n            <div \n              key={index}\n              className=\"history\" \n              onClick={handleHistory(index)}\n              style={{\n                borderBottom: i[1] !== ' ' && i[0] !== ' ' && index !== 4 \n                  ? '1px dotted black'\n                  : '1px solid transparent'\n              }}\n            >{i[0]}</div>\n          )}\n        </div>\n        \n        <CalcDisplay upperVal={expression} lowerVal={lowerVal} />\n        <label id=\"error\">{errorMsg}</label>\n        <label id=\"memory\">{mem !== '0' ? 'M' : ''}</label>\n      </div>\n\n      <div className=\"keyboard\">\n        <CalcKey name=\"MC\" onClick={handleMClear}/>\n        <CalcKey name=\"MR\" onClick={handleMRetrieve}/>\n        <CalcKey name=\"MS\" onClick={handleMStore}/>\n        <CalcKey name=\"M+\" onClick={handleMAdd}/>\n        <CalcKey name=\"M-\" onClick={handleMSubtract}/><br/>\n\n        <CalcKey name=\"Del\" onClick={handleDelete}/>\n        <CalcKey name=\"CE\" onClick={handleClearEntry}/>\n        <CalcKey name=\"C\" onClick={handleClear}/>\n        <CalcKey id=\"toggleSign\" name=\"±\" onClick={handleToggleSign}/>\n        <CalcKey id=\"sqrt\" name=\"√\" onClick={handleSqrt}/><br/>\n\n        <CalcKey className=\"button-num\" name=\"7\" onClick={handleDigit}/>\n        <CalcKey className=\"button-num\" name=\"8\" onClick={handleDigit}/>\n        <CalcKey className=\"button-num\" name=\"9\" onClick={handleDigit}/>\n        <CalcKey name=\"/\" onClick={handleOperator}/>\n        <CalcKey name=\"%\" onClick={handlePercent}/><br/>\n\n        <CalcKey className=\"button-num\" name=\"4\" onClick={handleDigit}/>\n        <CalcKey className=\"button-num\" name=\"5\" onClick={handleDigit}/>\n        <CalcKey className=\"button-num\" name=\"6\" onClick={handleDigit}/>\n        <CalcKey name=\"*\" onClick={handleOperator}/>\n        <CalcKey id=\"inverse\" name=\"1/x\" onClick={handleInverse}/><br/>\n      </div>\n\n      <div className=\"keyboard keyboard-bot\">\n        <div className=\"bot-left\">\n          <CalcKey className=\"button-num\" name=\"1\" onClick={handleDigit}/>\n          <CalcKey className=\"button-num\" name=\"2\" onClick={handleDigit}/>\n          <CalcKey className=\"button-num\" name=\"3\" onClick={handleDigit}/>\n          <CalcKey name=\"-\" onClick={handleOperator}/><br/>\n\n          <CalcKey className=\"button-num button-wide\" name=\"0\" onClick={handleDigit}/>\n          <CalcKey className=\"button-num\" name=\".\" onClick={handleDot}/>\n          <CalcKey name=\"+\" onClick={handleOperator}/>\n        </div>\n        <div className=\"bot-right\">\n          <CalcKey className=\"button-tall\" name=\"=\" onClick={handleEqual}/>\n        </div>\n      </div>\n      \n    </main>\n  )\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport Calculator from './components/Calculator';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div>\r\n      <Calculator />\r\n    </div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}