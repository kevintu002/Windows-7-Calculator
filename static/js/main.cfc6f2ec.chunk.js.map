{"version":3,"sources":["components/CalcDisplay.js","components/CalcKey.js","components/Calculator.js","index.js"],"names":["CalcDisplay","upperVal","lowerVal","className","id","data-testid","CalcKey","name","onClick","Calculator","useState","expression","setExpression","setLowerVal","mem","setMem","errorMsg","setErrorMsg","Array","fill","history","setHistory","cursor","setCursor","waitingForNewExpression","setWaitingForNewExpression","prevKey","setPrevKey","historyStart","setHistoryStart","operRegEx","RegExp","useEffect","includes","length","document","getElementById","style","fontSize","handleClear","handleDigit","target","newDigit","test","prev","handleOperator","newOperator","newExpression","newLowerVal","slice","myEval","concat","oldExpression","stringArr","evaluate","join","getAllNonEmptyHistories","filter","i","setHistoryBGColorOf","index","color","historyPointer","getElementsByClassName","backgroundColor","setHistoryIndexColor","setToSelected","handleHistory","displayIndex","handleKeyPress","e","key","ctrlKeyMap","q","p","m","r","l","c","v","shiftKeyMap","Enter","keyMap","Escape","Delete","Backspace","F9","ArrowUp","ArrowDown","PageUp","PageDown","ctrlKey","navigator","clipboard","writeText","readText","then","text","isNaN","click","shiftKey","window","open","error","blur","addEventListener","removeEventListener","href","rel","nonEmptyHistory","map","borderBottom","sqrt","inv","lastOperator","lastOperand","allEmptyHistories","newHistory","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cfc6f2ec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function CalcDisplay({upperVal, lowerVal}) {\r\n  return (\r\n    <div>\r\n      <div className=\"outer-div expression\">\r\n        <label \r\n          id=\"expression\" \r\n          className=\"inner-div small-text\" \r\n          data-testid=\"expression\">\r\n            {upperVal}\r\n        </label>\r\n      </div>\r\n      \r\n      <div className=\"outer-div\">\r\n        <label \r\n          id=\"lowerVal\" \r\n          className=\"inner-div large-text\" \r\n          data-testid=\"lowerVal\">\r\n            {lowerVal}\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function CalcKey({className, id, name, onClick}) {\r\n  return (\r\n    <button \r\n      className={className ? className : ''} \r\n      id={id ? id : name} \r\n      name={name} \r\n      onClick={onClick}>{name}\r\n    </button>\r\n  )\r\n}","import '../css/style.css';\r\nimport CalcDisplay from './CalcDisplay';\r\nimport CalcKey from './CalcKey';\r\nimport { useEffect, useState } from 'react';\r\nimport { evaluate, sqrt, inv } from 'mathjs';\r\n\r\nexport default function Calculator() {\r\n  const [expression, setExpression] = useState([])\r\n  const [lowerVal, setLowerVal] = useState('0')\r\n  const [mem, setMem] = useState('0')\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  const [history, setHistory] = useState(Array(5).fill([' ', ' ']))\r\n  const [cursor, setCursor] = useState(null)\r\n\r\n  const [waitingForNewExpression, setWaitingForNewExpression] = useState(false)\r\n  const [prevKey, setPrevKey] = useState(null)\r\n  const [historyStart, setHistoryStart] = useState(0)\r\n  const operRegEx = new RegExp('\\\\+|-|\\\\*|\\\\/')\r\n\r\n  useEffect(() => {\r\n    if (['Infinity', 'NaN'].includes(lowerVal))\r\n      setErrorMsg('Cannot divide by zero')\r\n    else if (lowerVal.includes('i'))\r\n      setErrorMsg('Cannot sqrt negative')\r\n\r\n    if (lowerVal.length > 12)\r\n      document.getElementById('lowerVal').style.fontSize = '16px'\r\n  }, [lowerVal])\r\n\r\n  const handleMClear = () => {\r\n    setMem('0')\r\n  }\r\n\r\n  const handleMRetrieve = () => {\r\n    if (!errorMsg) {\r\n      setLowerVal(mem)\r\n      setPrevKey('MR')\r\n    }\r\n  }\r\n\r\n  const handleMStore = () => {\r\n    if (!errorMsg) {\r\n      setMem(lowerVal)\r\n      if (!isNaN(prevKey))\r\n        setPrevKey('MS')\r\n    }\r\n  }\r\n\r\n  const handleMAdd = () => {\r\n    if (!errorMsg) {\r\n      setMem(myEval([mem, '+', lowerVal]))\r\n    }\r\n  }\r\n\r\n  const handleMSubtract = () => {\r\n    if (!errorMsg) {\r\n      setMem(myEval([mem, '-', lowerVal]))\r\n    }\r\n  }\r\n\r\n  const handleClear = () => {\r\n    setExpression([])\r\n    setLowerVal('0')\r\n    setPrevKey(null)\r\n    setErrorMsg('')\r\n    setWaitingForNewExpression(false)\r\n  }\r\n\r\n  const handleClearEntry = () => {\r\n    if (errorMsg) {\r\n      handleClear()\r\n    } else {\r\n      setLowerVal('0')\r\n      setPrevKey('CE')\r\n    }\r\n  }\r\n\r\n  const handleToggleSign = () => {\r\n    if (!errorMsg) {\r\n      setLowerVal(prev => (prev * -1) + '')\r\n      setPrevKey('toggleSign')\r\n    }\r\n  }\r\n\r\n  const handleSqrt = () => {\r\n    if (!errorMsg) {\r\n      setLowerVal(prev => sqrt(prev) + '')\r\n      \r\n      setPrevKey('sqrtinv')\r\n    }\r\n  }\r\n\r\n  const handleInverse = () => {\r\n    if (!errorMsg) {\r\n      setLowerVal(prev => inv(prev) + '')\r\n\r\n      // sqrt and inverse interactions are the same\r\n      setPrevKey('sqrtinv')\r\n    }\r\n  }\r\n  \r\n  const handlePercent = () => {\r\n    if (!errorMsg) {\r\n      if (expression.length > 1) {\r\n        if (operRegEx.test(expression.slice(-1))) {\r\n          setLowerVal(prev => (myEval(expression.slice(0, -1)) * prev / 100) + '')\r\n        } else {\r\n          setLowerVal(prev => (myEval(expression) * prev / 100) + '')\r\n        }\r\n      } else {\r\n        // expressions without an operator is always 0\r\n        setLowerVal('0')\r\n      }\r\n\r\n      setPrevKey('percent')\r\n    }\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (!errorMsg) {\r\n      if (prevKey !== '=' && lowerVal !== '0') {\r\n        setLowerVal(prev => prev.length === 1 ? '0' : prev.slice(0, -1))\r\n\r\n        setPrevKey('del')\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDot = () => {\r\n    if (!errorMsg) {\r\n      if (!lowerVal.includes('.')) {\r\n        if (prevKey === '=' || operRegEx.test(prevKey) \r\n        || (expression.length === 0 && lowerVal === '0'))\r\n        // prepend 0 under special cases\r\n          setLowerVal('0.')\r\n        else\r\n          setLowerVal(prev => prev + '.')\r\n        \r\n        setWaitingForNewExpression(false)\r\n        setPrevKey('.')\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDigit = ({target}) => {\r\n    if (!errorMsg) {\r\n      const newDigit = target.name\r\n\r\n      if (!['=', 'MR', 'MS', 'hist', 'sqrtinv', 'percent'].includes(prevKey) \r\n        && !operRegEx.test(prevKey)) {\r\n        // overwrite 0. otherwise, append\r\n        setLowerVal(prev => prev === '0' ? newDigit : prev + newDigit)\r\n      } else {\r\n        if (waitingForNewExpression)\r\n          setExpression([])\r\n\r\n        // next input overwrites lowerVal\r\n        setLowerVal(newDigit)\r\n      }\r\n\r\n      setWaitingForNewExpression(false)\r\n      setPrevKey(newDigit)\r\n    }\r\n  }\r\n\r\n  const handleOperator = ({target}) => {\r\n    if (!errorMsg) {\r\n      const newOperator = target.name\r\n      let newExpression = expression\r\n      let newLowerVal = lowerVal\r\n      \r\n      if (operRegEx.test(prevKey)) {\r\n        // replace operator\r\n        newExpression = [...expression.slice(0,-1), newOperator]\r\n      } else if (['.', 'CE', 'toggleSign', 'MR', 'hist', 'paste', 'sqrtinv', 'percent']\r\n        .includes(prevKey)) {\r\n        // existing expression with last item as operator will append the lower value and the newOperator\r\n        // otherwise replace the expression with the evaluation and the newOperator\r\n        // remove dot\r\n        if (lowerVal.slice(-1)[0] === '.')\r\n          newLowerVal = lowerVal.slice(0,-1)\r\n\r\n        if (operRegEx.test(expression.slice(-1))) {\r\n          newExpression = [...expression, newLowerVal]\r\n        } else {\r\n          newExpression = [newLowerVal]\r\n        }\r\n\r\n        newLowerVal = myEval(newExpression)\r\n        newExpression = newExpression.concat(newOperator)\r\n      } else if (prevKey === '=') {\r\n        // append to existing expression\r\n        newLowerVal = myEval(expression)\r\n        newExpression = [newLowerVal, newOperator]\r\n      } else {\r\n        // evaluate and display current expression with new operator\r\n        const oldExpression = [...expression, lowerVal]\r\n\r\n        newLowerVal = myEval(oldExpression)\r\n        newExpression = oldExpression.concat(newOperator)\r\n      }\r\n\r\n      setWaitingForNewExpression(false)\r\n      setExpression(newExpression)\r\n      setLowerVal(newLowerVal)\r\n      setPrevKey(newOperator)\r\n    }\r\n  }\r\n\r\n  // helper function. must pass an arr of strings. returns evaluation of the string\r\n  const myEval = (stringArr) => {\r\n    return evaluate(stringArr.join('')) + ''\r\n  }\r\n\r\n  const handleEqual = () => {\r\n    if (!errorMsg) {\r\n      let newExpression = expression\r\n      let newLowerVal = lowerVal\r\n\r\n      if (!operRegEx.test(expression)) {\r\n        if (prevKey !== '.') {\r\n          newExpression = [lowerVal]\r\n        } else {\r\n          // remove dot from expression and lowerVal\r\n          newExpression = [lowerVal.slice(0,-1)]\r\n          newLowerVal = lowerVal.slice(0,-1)\r\n        }\r\n      } else if (['.', 'CE', 'toggleSign', 'MR', 'hist', 'paste', 'sqrtinv', 'percent']\r\n        .includes(prevKey)) {\r\n        // existing expression with last item as operator will append the lowerVal to expression \r\n        // otherwise repeat expression on the lowerVal\r\n        // remove dot\r\n        if (lowerVal.slice(-1)[0] === '.')\r\n          newLowerVal = lowerVal.slice(0,-1)\r\n\r\n        // was last item in expression was an operator?\r\n        if (operRegEx.test(expression.slice(-1))) {\r\n          newExpression = [...expression, newLowerVal]\r\n        } else {\r\n          // use last operator and operand on curr lowerVal\r\n          const [lastOperator, lastOperand] = expression.slice(-2)\r\n\r\n          newExpression = [newLowerVal, lastOperator, lastOperand]\r\n        }\r\n\r\n        newLowerVal = myEval(newExpression)\r\n      } else if (prevKey === '=') {\r\n        // repeat last operator and operand\r\n        const [lastOperator, lastOperand] = expression.slice(-2)\r\n\r\n        newExpression = [lowerVal, lastOperator, lastOperand]\r\n        newLowerVal = myEval([...expression, lastOperator, lastOperand])\r\n      } else {\r\n        // just append\r\n        newExpression = [...expression, lowerVal]\r\n        newLowerVal = myEval(newExpression)\r\n      }\r\n\r\n      // state updates\r\n      let allEmptyHistories = history.filter(i => i[0] === ' ' && i[1] === ' ')\r\n      let newHistory = history\r\n      if (allEmptyHistories.length !== 0) {\r\n        // edit history directly when there exists empty expressions\r\n        newHistory[5 - allEmptyHistories.length] = [newExpression.join(''), newLowerVal]\r\n        setCursor(5 - allEmptyHistories.length)\r\n      } else {\r\n        newHistory = newHistory.concat([[newExpression.join(''), newLowerVal]])\r\n        setCursor(4)\r\n        setHistoryStart(getAllNonEmptyHistories().length - 4)\r\n      }\r\n\r\n      setWaitingForNewExpression(true)\r\n      setHistory(newHistory)\r\n      setExpression(newExpression)\r\n      setLowerVal(newLowerVal)\r\n      setPrevKey('=')\r\n    }\r\n  }\r\n\r\n  // returns list of all non empty entries in history\r\n  const getAllNonEmptyHistories = () => {\r\n    return history.filter(i => i[0] !== ' ' && i[1] !== ' ')\r\n  }\r\n\r\n  // sets background color of history display {index} to {color}\r\n  const setHistoryBGColorOf = (index, color) => {\r\n    const historyPointer = document.getElementsByClassName('history')[index]\r\n    if (historyPointer)\r\n      historyPointer.style.backgroundColor = color\r\n  }\r\n\r\n  // sets font color of history display {index} to {color}\r\n  const setHistoryIndexColor = (index, color) => {\r\n    const historyPointer = document.getElementsByClassName('history')[index]\r\n    if (historyPointer)\r\n      historyPointer.style.color = color\r\n  }\r\n\r\n  // sets index to selected style\r\n  const setToSelected = (index) => {\r\n    setHistoryIndexColor(index, 'white')\r\n    setHistoryBGColorOf(index, 'rgb(102, 132, 146)')\r\n  }\r\n\r\n  // sets index to default style\r\n  const setToUnselected = (index) => {\r\n    setHistoryIndexColor(index, 'black')\r\n    setHistoryBGColorOf(index, 'transparent')\r\n  }\r\n\r\n  // any key press after history has been selected should modify cursor style\r\n  useEffect(() => {\r\n    if (!['hist', '='].includes(prevKey)) {\r\n      // resets cursor focus\r\n      setHistoryIndexColor(cursor, 'black')\r\n      setHistoryBGColorOf(cursor, 'lightblue')\r\n    }\r\n\r\n    if (prevKey === 'hist')\r\n      setToSelected(cursor)\r\n    if (prevKey === '=')\r\n      setHistoryBGColorOf(cursor, 'lightblue')\r\n\r\n    return () => {\r\n      if (cursor !== null)\r\n        // sets previous cursor's style to default\r\n        setToUnselected(cursor)\r\n    }\r\n  })\r\n\r\n  const handleHistory = (displayIndex) => () => {\r\n    if (!errorMsg) {\r\n      if (history[displayIndex + historyStart][1] !== ' ' && cursor !== null) {\r\n        setLowerVal(history[displayIndex + historyStart][1])\r\n        if (prevKey === '=')\r\n          setWaitingForNewExpression(true)\r\n        setPrevKey('hist')\r\n        setToSelected(displayIndex)\r\n        setCursor(displayIndex)\r\n      }\r\n    }\r\n  }\r\n\r\n  const moveCursorUp = () => {\r\n    if (!errorMsg && cursor !== null) {\r\n      if (cursor === 0) {\r\n        if (cursor + historyStart - 1 === -1) {\r\n          setLowerVal(history[0][1])\r\n        } else {\r\n          setHistoryStart(prev => prev - 1)\r\n          setLowerVal(history[cursor + historyStart - 1][1])\r\n        }\r\n\r\n        setToSelected(0)\r\n      } else {\r\n        handleHistory(cursor - 1)()\r\n      }\r\n\r\n      if (prevKey === '=')\r\n        setWaitingForNewExpression(true)\r\n      setPrevKey('hist')\r\n    }\r\n  }\r\n\r\n  const moveCursorDown = () => {\r\n    if (!errorMsg && cursor !== null) {\r\n      const nonEmptyHistory = getAllNonEmptyHistories()\r\n\r\n      if (cursor + historyStart === nonEmptyHistory.length - 1) {\r\n        setLowerVal(history[cursor + historyStart][1])\r\n        setToSelected(cursor + historyStart)\r\n      } else if (cursor === 4) {\r\n        setHistoryStart(prev => prev + 1)\r\n        setLowerVal(history[cursor + historyStart + 1][1])\r\n      } else {\r\n        handleHistory(cursor + 1)()\r\n      }\r\n\r\n      if (prevKey === '=')\r\n        setWaitingForNewExpression(true)\r\n      setPrevKey('hist')\r\n    }\r\n  }\r\n\r\n  const handleKeyPress = (e) => {\r\n    const key = e.key\r\n    // console.log(key)\r\n    const ctrlKeyMap = {\r\n      q: 'M-',\r\n      p: 'M+',\r\n      m: 'MS',\r\n      r: 'MR',\r\n      l: 'MC',\r\n      c: 'copy',\r\n      v: 'paste'\r\n    }\r\n    const shiftKeyMap = {\r\n      Enter: 'MS',\r\n      '=': '+',\r\n      '@': 'sqrt',\r\n      '%': '%'\r\n    }\r\n    const keyMap = {\r\n      Enter: '=',\r\n      r: 'inverse',\r\n      Escape: 'C',\r\n      Delete: 'CE',\r\n      Backspace: 'Del',\r\n      F9: 'toggleSign',\r\n      ArrowUp: 'up',\r\n      ArrowDown: 'down',\r\n      PageUp: 'up',\r\n      PageDown: 'down'\r\n    }\r\n    try {\r\n      if (e.ctrlKey && key in ctrlKeyMap) {\r\n        // ctrl key modifier\r\n        if (key === 'c') {\r\n          navigator.clipboard.writeText(lowerVal)\r\n        } else if (key === 'v') {\r\n          navigator.clipboard.readText().then(text => setLowerVal(!isNaN(text) ? text : '0'))\r\n\r\n          setPrevKey('paste')\r\n        } else {\r\n          document.getElementById(ctrlKeyMap[key]).click()\r\n        }\r\n      } else if (e.shiftKey && key in shiftKeyMap) {\r\n        // shift key modifier\r\n        document.getElementById(shiftKeyMap[key]).click()\r\n      } else if (key === 'F1') {\r\n        window.open('https://github.com/Poplica/react-calculator/blob/master/README.md', '_blank')\r\n      } else if (key in keyMap) {\r\n        document.getElementById(keyMap[key]).click()\r\n      } else {\r\n        document.getElementById(key).click()\r\n      }\r\n    } catch (error) {\r\n      // unmapped inputs do nothing\r\n      // console.log(error)\r\n    }\r\n\r\n    // removes button focus\r\n    e.target.blur()\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keyup', handleKeyPress)\r\n    return () => {\r\n      document.removeEventListener('keyup', handleKeyPress)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <main className=\"calculator\">\r\n      <div className=\"menu\">\r\n        <a \r\n          target=\"_blank\"\r\n          name=\"help\"\r\n          href=\"https://github.com/Poplica/react-calculator/blob/master/README.md\"\r\n          rel=\"noopener noreferrer\"\r\n        >Help</a>\r\n      </div>\r\n\r\n      <div className=\"display\">\r\n        <div className=\"navigation\">\r\n          <CalcKey id=\"up\" name=\"&#x25B2;\" onClick={moveCursorUp}/>\r\n          <CalcKey id=\"down\" name=\"&#x25BC;\" onClick={moveCursorDown}/>\r\n        </div>\r\n        <div className=\"outer-div\">\r\n          {history.slice(historyStart, historyStart + 5).map((i, index) =>\r\n            <div \r\n              key={index}\r\n              className=\"history\" \r\n              onClick={handleHistory(index)}\r\n              style={{\r\n                // all border-bottom should be 1px dotted except for the last one and blank expressions\r\n                borderBottom: i[1] !== ' ' && i[0] !== ' ' && index !== 4 ? '1px dotted black': '1px solid transparent'\r\n              }}\r\n            >{i[0]}</div>\r\n          )}\r\n        </div>\r\n        \r\n        <CalcDisplay upperVal={expression} lowerVal={lowerVal} />\r\n        <label id=\"error\">{errorMsg}</label>\r\n        <label id=\"memory\">{mem !== '0' ? 'M' : ''}</label>\r\n      </div>\r\n\r\n      <div className=\"keyboard\">\r\n        <CalcKey name=\"MC\" onClick={handleMClear}/>\r\n        <CalcKey name=\"MR\" onClick={handleMRetrieve}/>\r\n        <CalcKey name=\"MS\" onClick={handleMStore}/>\r\n        <CalcKey name=\"M+\" onClick={handleMAdd}/>\r\n        <CalcKey name=\"M-\" onClick={handleMSubtract}/><br/>\r\n\r\n        <CalcKey name=\"Del\" onClick={handleDelete}/>\r\n        <CalcKey name=\"CE\" onClick={handleClearEntry}/>\r\n        <CalcKey name=\"C\" onClick={handleClear}/>\r\n        <CalcKey id=\"toggleSign\" name=\"±\" onClick={handleToggleSign}/>\r\n        <CalcKey id=\"sqrt\" name=\"√\" onClick={handleSqrt}/><br/>\r\n\r\n        <CalcKey className=\"button-num\" name=\"7\" onClick={handleDigit}/>\r\n        <CalcKey className=\"button-num\" name=\"8\" onClick={handleDigit}/>\r\n        <CalcKey className=\"button-num\" name=\"9\" onClick={handleDigit}/>\r\n        <CalcKey name=\"/\" onClick={handleOperator}/>\r\n        <CalcKey name=\"%\" onClick={handlePercent}/><br/>\r\n\r\n        <CalcKey className=\"button-num\" name=\"4\" onClick={handleDigit}/>\r\n        <CalcKey className=\"button-num\" name=\"5\" onClick={handleDigit}/>\r\n        <CalcKey className=\"button-num\" name=\"6\" onClick={handleDigit}/>\r\n        <CalcKey name=\"*\" onClick={handleOperator}/>\r\n        <CalcKey id=\"inverse\" name=\"1/x\" onClick={handleInverse}/><br/>\r\n      </div>\r\n\r\n      <div className=\"keyboard keyboard-bot\">\r\n        <div className=\"bot-left\">\r\n          <CalcKey className=\"button-num\" name=\"1\" onClick={handleDigit}/>\r\n          <CalcKey className=\"button-num\" name=\"2\" onClick={handleDigit}/>\r\n          <CalcKey className=\"button-num\" name=\"3\" onClick={handleDigit}/>\r\n          <CalcKey name=\"-\" onClick={handleOperator}/><br/>\r\n\r\n          <CalcKey className=\"button-num button-wide\" name=\"0\" onClick={handleDigit}/>\r\n          <CalcKey className=\"button-num\" name=\".\" onClick={handleDot}/>\r\n          <CalcKey name=\"+\" onClick={handleOperator}/>\r\n        </div>\r\n        <div className=\"bot-right\">\r\n          <CalcKey className=\"button-tall\" name=\"=\" onClick={handleEqual}/>\r\n        </div>\r\n      </div>\r\n      \r\n    </main>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport Calculator from './components/Calculator';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div>\r\n      <Calculator />\r\n    </div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}