{"version":3,"sources":["components/CalcDisplay.js","components/CalcKey.js","components/Calculator.js","index.js"],"names":["CalcDisplay","upperVal","lowerVal","className","id","data-testid","CalcKey","name","onClick","Calculator","useState","expression","setExpression","setLowerVal","mem","setMem","errorMsg","setErrorMsg","Array","fill","history","setHistory","cursor","setCursor","waitingForNewExpression","setWaitingForNewExpression","prevKey","setPrevKey","historyStart","setHistoryStart","operRegEx","RegExp","helpURL","useEffect","includes","length","document","getElementById","style","fontSize","handleClear","handleDigit","target","newDigit","test","prev","handleOperator","newOperator","newExpression","newLowerVal","slice","myEval","concat","oldExpression","stringArr","evaluate","join","getAllNonEmptyHistories","filter","ii","setHistoryBGColorOf","index","color","historyPointer","getElementsByClassName","backgroundColor","setHistoryIndexColor","setToSelected","handleHistory","displayIndex","handleKeyPress","e","key","ctrlKeyMap","q","p","m","r","l","c","v","shiftKeyMap","Enter","keyMap","Escape","Delete","Backspace","F9","ArrowUp","ArrowDown","PageUp","PageDown","ctrlKey","navigator","clipboard","writeText","readText","then","text","isNaN","click","shiftKey","window","open","error","blur","addEventListener","removeEventListener","href","rel","nonEmptyHistory","map","i","borderBottom","sqrt","inv","lastOperator","lastOperand","allEmptyHistories","newHistory","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e991a648.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function CalcDisplay({upperVal, lowerVal}) {\r\n  return (\r\n    <div>\r\n      <div className=\"outer-div expression\">\r\n        <label \r\n          id=\"expression\" \r\n          className=\"inner-div small-text\" \r\n          data-testid=\"expression\">\r\n            {upperVal}\r\n        </label>\r\n      </div>\r\n      \r\n      <div className=\"outer-div\">\r\n        <label \r\n          id=\"lowerVal\" \r\n          className=\"inner-div large-text\" \r\n          data-testid=\"lowerVal\">\r\n            {lowerVal}\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function CalcKey({className, id, name, onClick}) {\r\n  return (\r\n    <button \r\n      className={className ? className : ''} \r\n      id={id ? id : name} \r\n      name={name} \r\n      onClick={onClick}>{name}\r\n    </button>\r\n  )\r\n}","import '../css/style.css';\r\nimport CalcDisplay from './CalcDisplay';\r\nimport CalcKey from './CalcKey';\r\nimport { useEffect, useState } from 'react';\r\nimport { evaluate, sqrt, inv } from 'mathjs';\r\n\r\nexport default function Calculator() {\r\n  const [expression, setExpression] = useState([])\r\n  const [lowerVal, setLowerVal] = useState('0')\r\n  const [mem, setMem] = useState('0')\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  const [history, setHistory] = useState(Array(5).fill([' ', ' ']))\r\n  const [cursor, setCursor] = useState(null)\r\n\r\n  const [waitingForNewExpression, setWaitingForNewExpression] = useState(false)\r\n  const [prevKey, setPrevKey] = useState(null)\r\n  const [historyStart, setHistoryStart] = useState(0)\r\n  const operRegEx = new RegExp('\\\\+|-|\\\\*|\\\\/')\r\n  const helpURL = 'https://github.com/Poplica/react-calculator/blob/master/README.md'\r\n\r\n  useEffect(() => {\r\n    if (['Infinity', 'NaN'].includes(lowerVal)) {\r\n      setErrorMsg('Cannot divide by zero')\r\n    } else if (lowerVal.includes('i')) {\r\n      setErrorMsg('Cannot sqrt negative')\r\n    }\r\n\r\n    if (lowerVal.length > 12) {\r\n      document.getElementById('lowerVal').style.fontSize = '16px'\r\n    }\r\n  }, [lowerVal])\r\n\r\n  useEffect(() => {\r\n    if (errorMsg) {\r\n      setLowerVal('')\r\n    }\r\n  }, [errorMsg])\r\n\r\n  const handleMClear = () => {\r\n    setMem('0')\r\n  }\r\n\r\n  const handleMRetrieve = () => {\r\n    if (!errorMsg) {\r\n      setLowerVal(mem)\r\n      setPrevKey('MR')\r\n    }\r\n  }\r\n\r\n  const handleMStore = () => {\r\n    if (!errorMsg) {\r\n      setMem(lowerVal)\r\n      if (!isNaN(prevKey)) {\r\n        setPrevKey('MS')\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleMAdd = () => {\r\n    if (!errorMsg) {\r\n      setMem(myEval([mem, '+', lowerVal]))\r\n    }\r\n  }\r\n\r\n  const handleMSubtract = () => {\r\n    if (!errorMsg) {\r\n      setMem(myEval([mem, '-', lowerVal]))\r\n    }\r\n  }\r\n\r\n  const handleClear = () => {\r\n    setExpression([])\r\n    setLowerVal('0')\r\n    setPrevKey(null)\r\n    setErrorMsg('')\r\n    setWaitingForNewExpression(false)\r\n  }\r\n\r\n  const handleClearEntry = () => {\r\n    if (errorMsg) {\r\n      handleClear()\r\n    } else {\r\n      setLowerVal('0')\r\n      setPrevKey('CE')\r\n    }\r\n  }\r\n\r\n  const handleToggleSign = () => {\r\n    if (!errorMsg) {\r\n      setLowerVal(prev => (prev * -1) + '')\r\n      setPrevKey('toggleSign')\r\n    }\r\n  }\r\n\r\n  const handleSqrt = () => {\r\n    if (!errorMsg) {\r\n      setLowerVal(prev => sqrt(prev) + '')\r\n      \r\n      setPrevKey('sqrtinv')\r\n    }\r\n  }\r\n\r\n  const handleInverse = () => {\r\n    if (!errorMsg) {\r\n      setLowerVal(prev => inv(prev) + '')\r\n\r\n      setPrevKey('sqrtinv')\r\n    }\r\n  }\r\n  \r\n  const handlePercent = () => {\r\n    if (!errorMsg) {\r\n      if (expression.length > 1) {\r\n        if (operRegEx.test(expression.slice(-1))) {\r\n          setLowerVal(prev => (myEval(expression.slice(0, -1)) * prev / 100) + '')\r\n        } else {\r\n          setLowerVal(prev => (myEval(expression) * prev / 100) + '')\r\n        }\r\n      } else {\r\n        setLowerVal('0')\r\n      }\r\n\r\n      setPrevKey('percent')\r\n    }\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (!errorMsg && prevKey !== '=' && lowerVal !== '0') {\r\n      setLowerVal(prev => prev.length === 1 ? '0' : prev.slice(0, -1))\r\n\r\n      setPrevKey('del')\r\n    }\r\n  }\r\n\r\n  const handleDot = () => {\r\n    if (!errorMsg && !lowerVal.includes('.')) {\r\n      if (prevKey === '=' || operRegEx.test(prevKey) \r\n        || (expression.length === 0 && lowerVal === '0')) {\r\n        // prepend 0 under special cases\r\n        setLowerVal('0.')\r\n      } else {\r\n        setLowerVal(prev => prev + '.')\r\n      }\r\n      \r\n      setWaitingForNewExpression(false)\r\n      setPrevKey('.')\r\n    }\r\n  }\r\n\r\n  const handleDigit = ({target}) => {\r\n    if (!errorMsg) {\r\n      const newDigit = target.name\r\n\r\n      if (!['=', 'MR', 'MS', 'hist', 'sqrtinv', 'percent'].includes(prevKey) \r\n        && !operRegEx.test(prevKey)) {\r\n        setLowerVal(prev => prev === '0' ? newDigit : prev + newDigit)\r\n      } else {\r\n        if (waitingForNewExpression) {\r\n          setExpression([])\r\n        }\r\n\r\n        setLowerVal(newDigit)\r\n      }\r\n\r\n      setWaitingForNewExpression(false)\r\n      setPrevKey(newDigit)\r\n    }\r\n  }\r\n\r\n  const handleOperator = ({target}) => {\r\n    if (!errorMsg) {\r\n      const newOperator = target.name\r\n      let newExpression = expression\r\n      let newLowerVal = lowerVal\r\n      \r\n      if (operRegEx.test(prevKey)) {\r\n        newExpression = [...expression.slice(0,-1), newOperator]\r\n      } else if (['.', 'CE', 'toggleSign', 'MR', 'hist', 'paste', 'sqrtinv', 'percent']\r\n        .includes(prevKey)) {\r\n        // existing expression with last item as operator will append the lower value and the newOperator\r\n        // otherwise replace the expression with the evaluation and the newOperator \r\n        if (lowerVal.slice(-1)[0] === '.') {\r\n          newLowerVal = lowerVal.slice(0,-1)\r\n        }\r\n\r\n        if (operRegEx.test(expression.slice(-1))) {\r\n          newExpression = [...expression, newLowerVal]\r\n        } else {\r\n          newExpression = [newLowerVal]\r\n        }\r\n\r\n        newLowerVal = myEval(newExpression)\r\n        newExpression = newExpression.concat(newOperator)\r\n      } else if (prevKey === '=') {\r\n        // append to existing expression\r\n        newLowerVal = myEval(expression)\r\n        newExpression = [newLowerVal, newOperator]\r\n      } else {\r\n        // evaluate and display current expression with new operator\r\n        const oldExpression = [...expression, lowerVal]\r\n\r\n        newLowerVal = myEval(oldExpression)\r\n        newExpression = oldExpression.concat(newOperator)\r\n      }\r\n\r\n      setWaitingForNewExpression(false)\r\n      setExpression(newExpression)\r\n      setLowerVal(newLowerVal)\r\n      setPrevKey(newOperator)\r\n    }\r\n  }\r\n\r\n  // helper function. must pass an arr of strings. returns evaluation of the string\r\n  const myEval = (stringArr) => {\r\n    return evaluate(stringArr.join('')) + ''\r\n  }\r\n\r\n  const handleEqual = () => {\r\n    if (!errorMsg) {\r\n      let newExpression = expression\r\n      let newLowerVal = lowerVal\r\n\r\n      if (!operRegEx.test(expression)) {\r\n        if (prevKey !== '.') {\r\n          newExpression = [lowerVal]\r\n        } else {\r\n          newExpression = [lowerVal.slice(0,-1)]\r\n          newLowerVal = lowerVal.slice(0,-1)\r\n        }\r\n      } else if (['.', 'CE', 'toggleSign', 'MR', 'hist', 'paste', 'sqrtinv', 'percent']\r\n        .includes(prevKey)) {\r\n        // existing expression with last item as operator will append the lowerVal to expression \r\n        // otherwise repeat expression on the lowerVal\r\n        if (lowerVal.slice(-1)[0] === '.') {\r\n          newLowerVal = lowerVal.slice(0,-1)\r\n        }\r\n\r\n        if (operRegEx.test(expression.slice(-1))) {\r\n          newExpression = [...expression, newLowerVal]\r\n        } else {\r\n          // use last operator and operand on curr lowerVal\r\n          const [lastOperator, lastOperand] = expression.slice(-2)\r\n\r\n          newExpression = [newLowerVal, lastOperator, lastOperand]\r\n        }\r\n\r\n        newLowerVal = myEval(newExpression)\r\n      } else if (prevKey === '=') {\r\n        // repeat last operator and operand\r\n        const [lastOperator, lastOperand] = expression.slice(-2)\r\n\r\n        newExpression = [lowerVal, lastOperator, lastOperand]\r\n        newLowerVal = myEval([...expression, lastOperator, lastOperand])\r\n      } else {\r\n        newExpression = [...expression, lowerVal]\r\n        newLowerVal = myEval(newExpression)\r\n      }\r\n\r\n      let allEmptyHistories = history.filter(ii => ii[0] === ' ' && ii[1] === ' ')\r\n      let newHistory = history\r\n      if (allEmptyHistories.length !== 0) {\r\n        // edit history directly when there exists empty expressions\r\n        newHistory[5 - allEmptyHistories.length] = [newExpression.join(''), newLowerVal]\r\n        setCursor(5 - allEmptyHistories.length)\r\n      } else {\r\n        newHistory = newHistory.concat([[newExpression.join(''), newLowerVal]])\r\n        setCursor(4)\r\n        setHistoryStart(getAllNonEmptyHistories().length - 4)\r\n      }\r\n\r\n      setWaitingForNewExpression(true)\r\n      setHistory(newHistory)\r\n      setExpression(newExpression)\r\n      setLowerVal(newLowerVal)\r\n      setPrevKey('=')\r\n    }\r\n  }\r\n\r\n  // returns list of all non empty entries in history\r\n  const getAllNonEmptyHistories = () => {\r\n    return history.filter(ii => ii[0] !== ' ' && ii[1] !== ' ')\r\n  }\r\n\r\n  // sets background color of history display index to color\r\n  const setHistoryBGColorOf = (index, color) => {\r\n    const historyPointer = document.getElementsByClassName('history')[index]\r\n    if (historyPointer) {\r\n      historyPointer.style.backgroundColor = color\r\n    }\r\n  }\r\n\r\n  // sets font color of history display index to color\r\n  const setHistoryIndexColor = (index, color) => {\r\n    const historyPointer = document.getElementsByClassName('history')[index]\r\n    if (historyPointer) {\r\n      historyPointer.style.color = color\r\n    }\r\n  }\r\n\r\n  // sets index to selected style\r\n  const setToSelected = (index) => {\r\n    setHistoryIndexColor(index, 'white')\r\n    setHistoryBGColorOf(index, 'rgb(102, 132, 146)')\r\n  }\r\n\r\n  // sets index to default style\r\n  const setToUnselected = (index) => {\r\n    setHistoryIndexColor(index, 'black')\r\n    setHistoryBGColorOf(index, 'transparent')\r\n  }\r\n\r\n  // any key press after history has been selected should modify cursor style\r\n  useEffect(() => {\r\n    if (!['hist', '='].includes(prevKey)) {\r\n      // resets cursor focus\r\n      setHistoryIndexColor(cursor, 'black')\r\n      setHistoryBGColorOf(cursor, 'lightblue')\r\n    }\r\n\r\n    if (prevKey === 'hist') {\r\n      setToSelected(cursor)\r\n    }\r\n    if (prevKey === '=') {\r\n      setHistoryBGColorOf(cursor, 'lightblue')\r\n    }\r\n\r\n    return () => {\r\n      if (cursor !== null) {\r\n        // sets previous cursor's style to default\r\n        setToUnselected(cursor)\r\n      }\r\n    }\r\n  })\r\n\r\n  const handleHistory = (displayIndex) => () => {\r\n    if (!errorMsg && history[displayIndex + historyStart][1] !== ' ' && cursor !== null) {\r\n      if (prevKey === '=') {\r\n        setWaitingForNewExpression(true)\r\n      }\r\n      setLowerVal(history[displayIndex + historyStart][1])\r\n      setPrevKey('hist')\r\n      setToSelected(displayIndex)\r\n      setCursor(displayIndex)\r\n    }\r\n  }\r\n\r\n  const moveCursorUp = () => {\r\n    if (!errorMsg && cursor !== null) {\r\n      if (cursor === 0) {\r\n        if (cursor + historyStart - 1 === -1) {\r\n          setLowerVal(history[0][1])\r\n        } else {\r\n          setHistoryStart(prev => prev - 1)\r\n          setLowerVal(history[cursor + historyStart - 1][1])\r\n        }\r\n\r\n        setToSelected(0)\r\n      } else {\r\n        handleHistory(cursor - 1)()\r\n      }\r\n\r\n      if (prevKey === '=') {\r\n        setWaitingForNewExpression(true)\r\n      }\r\n      setPrevKey('hist')\r\n    }\r\n  }\r\n\r\n  const moveCursorDown = () => {\r\n    if (!errorMsg && cursor !== null) {\r\n      const nonEmptyHistory = getAllNonEmptyHistories()\r\n\r\n      if (cursor + historyStart === nonEmptyHistory.length - 1) {\r\n        setLowerVal(history[cursor + historyStart][1])\r\n        setToSelected(cursor + historyStart)\r\n      } else if (cursor === 4) {\r\n        setHistoryStart(prev => prev + 1)\r\n        setLowerVal(history[cursor + historyStart + 1][1])\r\n      } else {\r\n        handleHistory(cursor + 1)()\r\n      }\r\n\r\n      if (prevKey === '=') {\r\n        setWaitingForNewExpression(true)\r\n      }\r\n      setPrevKey('hist')\r\n    }\r\n  }\r\n\r\n  const handleKeyPress = (e) => {\r\n    const key = e.key\r\n    const ctrlKeyMap = {\r\n      q: 'M-',\r\n      p: 'M+',\r\n      m: 'MS',\r\n      r: 'MR',\r\n      l: 'MC',\r\n      c: 'copy',\r\n      v: 'paste'\r\n    }\r\n    const shiftKeyMap = {\r\n      Enter: 'MS',\r\n      '=': '+',\r\n      '@': 'sqrt',\r\n      '%': '%'\r\n    }\r\n    const keyMap = {\r\n      Enter: '=',\r\n      r: 'inverse',\r\n      Escape: 'C',\r\n      Delete: 'CE',\r\n      Backspace: 'Del',\r\n      F9: 'toggleSign',\r\n      ArrowUp: 'up',\r\n      ArrowDown: 'down',\r\n      PageUp: 'up',\r\n      PageDown: 'down'\r\n    }\r\n    try {\r\n      if (e.ctrlKey && key in ctrlKeyMap) {\r\n        if (key === 'c') {\r\n          navigator.clipboard.writeText(lowerVal)\r\n        } else if (key === 'v') {\r\n          navigator.clipboard.readText().then(text => setLowerVal(!isNaN(text) ? text : '0'))\r\n\r\n          setPrevKey('paste')\r\n        } else {\r\n          document.getElementById(ctrlKeyMap[key]).click()\r\n        }\r\n      } else if (e.shiftKey && key in shiftKeyMap) {\r\n        document.getElementById(shiftKeyMap[key]).click()\r\n      } else if (key === 'F1') {\r\n        window.open(helpURL, '_blank')\r\n      } else if (key in keyMap) {\r\n        document.getElementById(keyMap[key]).click()\r\n      } else {\r\n        document.getElementById(key).click()\r\n      }\r\n    } catch (error) {\r\n      // console.log(error)\r\n    }\r\n\r\n    e.target.blur()\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keyup', handleKeyPress)\r\n    return () => {\r\n      document.removeEventListener('keyup', handleKeyPress)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <main className=\"calculator\">\r\n      <div className=\"menu\">\r\n        <a \r\n          target=\"_blank\"\r\n          name=\"help\"\r\n          href={helpURL}\r\n          rel=\"noopener noreferrer\"\r\n        >Help</a>\r\n      </div>\r\n\r\n      <div className=\"display\">\r\n        <div className=\" outer-div navigation\">\r\n          <CalcKey id=\"up\" name=\"&#x25B2;\" onClick={moveCursorUp}/>\r\n          <CalcKey id=\"down\" name=\"&#x25BC;\" onClick={moveCursorDown}/>\r\n        </div>\r\n        <div className=\"outer-div\">\r\n          {history.slice(historyStart, historyStart + 5).map((i, index) =>\r\n            <div \r\n              key={index}\r\n              className=\"history\" \r\n              onClick={handleHistory(index)}\r\n              style={{\r\n                borderBottom: i[1] !== ' ' && i[0] !== ' ' && index !== 4 \r\n                  ? '1px dotted black'\r\n                  : '1px solid transparent'\r\n              }}\r\n            >{i[0]}</div>\r\n          )}\r\n        </div>\r\n        \r\n        <CalcDisplay upperVal={expression} lowerVal={lowerVal} />\r\n        <label id=\"error\">{errorMsg}</label>\r\n        <label id=\"memory\">{mem !== '0' ? 'M' : ''}</label>\r\n      </div>\r\n\r\n      <div className=\"keyboard\">\r\n        <CalcKey name=\"MC\" onClick={handleMClear}/>\r\n        <CalcKey name=\"MR\" onClick={handleMRetrieve}/>\r\n        <CalcKey name=\"MS\" onClick={handleMStore}/>\r\n        <CalcKey name=\"M+\" onClick={handleMAdd}/>\r\n        <CalcKey name=\"M-\" onClick={handleMSubtract}/><br/>\r\n\r\n        <CalcKey name=\"Del\" onClick={handleDelete}/>\r\n        <CalcKey name=\"CE\" onClick={handleClearEntry}/>\r\n        <CalcKey name=\"C\" onClick={handleClear}/>\r\n        <CalcKey id=\"toggleSign\" name=\"±\" onClick={handleToggleSign}/>\r\n        <CalcKey id=\"sqrt\" name=\"√\" onClick={handleSqrt}/><br/>\r\n\r\n        <CalcKey className=\"button-num\" name=\"7\" onClick={handleDigit}/>\r\n        <CalcKey className=\"button-num\" name=\"8\" onClick={handleDigit}/>\r\n        <CalcKey className=\"button-num\" name=\"9\" onClick={handleDigit}/>\r\n        <CalcKey name=\"/\" onClick={handleOperator}/>\r\n        <CalcKey name=\"%\" onClick={handlePercent}/><br/>\r\n\r\n        <CalcKey className=\"button-num\" name=\"4\" onClick={handleDigit}/>\r\n        <CalcKey className=\"button-num\" name=\"5\" onClick={handleDigit}/>\r\n        <CalcKey className=\"button-num\" name=\"6\" onClick={handleDigit}/>\r\n        <CalcKey name=\"*\" onClick={handleOperator}/>\r\n        <CalcKey id=\"inverse\" name=\"1/x\" onClick={handleInverse}/><br/>\r\n      </div>\r\n\r\n      <div className=\"keyboard keyboard-bot\">\r\n        <div className=\"bot-left\">\r\n          <CalcKey className=\"button-num\" name=\"1\" onClick={handleDigit}/>\r\n          <CalcKey className=\"button-num\" name=\"2\" onClick={handleDigit}/>\r\n          <CalcKey className=\"button-num\" name=\"3\" onClick={handleDigit}/>\r\n          <CalcKey name=\"-\" onClick={handleOperator}/><br/>\r\n\r\n          <CalcKey className=\"button-num button-wide\" name=\"0\" onClick={handleDigit}/>\r\n          <CalcKey className=\"button-num\" name=\".\" onClick={handleDot}/>\r\n          <CalcKey name=\"+\" onClick={handleOperator}/>\r\n        </div>\r\n        <div className=\"bot-right\">\r\n          <CalcKey className=\"button-tall\" name=\"=\" onClick={handleEqual}/>\r\n        </div>\r\n      </div>\r\n      \r\n    </main>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport Calculator from './components/Calculator';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div>\r\n      <Calculator />\r\n    </div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}