{"version":3,"sources":["components/CalcDisplay.js","components/CalcKey.js","Calculator.js","index.js"],"names":["CalcDisplay","upperVal","lowerVal","className","data-testid","CalcKey","name","onClick","onKeyPress","id","Calculator","useState","expression","setExpression","setLowerVal","prevKey","setPrevKey","mem","setMem","errorMsg","setErrorMsg","Array","fill","history","setHistory","cursor","setCursor","operRegEx","RegExp","useEffect","handleDigit","newDigit","target","includes","test","prev","handleOperator","newOperator","newExpression","newLowerVal","slice","myEval","concat","oldExpression","stringArr","evaluate","join","setHistoryBGColorOf","index","color","document","getElementsByClassName","style","backgroundColor","handleHistory","val","map","i","borderBottom","isNaN","length","lastOperator","lastOperand","allEmptyHistories","filter","newHistory","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9817f1a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function CalcDisplay({upperVal, lowerVal}) {\r\n  return (\r\n    <div>\r\n      <div className=\"outer-div expression\">\r\n        <div className=\"inner-div sm-text\" data-testid=\"expression\">{upperVal}</div>\r\n      </div>\r\n      <div className=\"outer-div\">\r\n        <div className=\"inner-div lg-text\" data-testid=\"lowerVal\">{lowerVal}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function CalcKey({name, onClick, onKeyPress}) {\r\n  return (\r\n    <button id={name} name={name} onClick={onClick} onKeyPress={onKeyPress}>{name}</button>\r\n  )\r\n}","import './css/style.css';\r\nimport CalcDisplay from './components/CalcDisplay';\r\nimport CalcKey from './components/CalcKey';\r\nimport { useEffect, useState } from 'react';\r\nimport { evaluate } from 'mathjs';\r\n\r\nexport default function Calculator() {\r\n  const [expression, setExpression] = useState([])\r\n  const [lowerVal, setLowerVal] = useState('0')\r\n  const [prevKey, setPrevKey] = useState(null)\r\n  const [mem, setMem] = useState('0')\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  const [history, setHistory] = useState(Array(5).fill([' ', ' ']))\r\n  const [cursor, setCursor] = useState(null)\r\n  const operRegEx = new RegExp('\\\\+|-|\\\\*|\\\\/')\r\n\r\n  useEffect(() => {\r\n    if (lowerVal === 'Infinity') {\r\n      setExpression([])\r\n      setLowerVal('0')\r\n      setPrevKey(null)\r\n      setErrorMsg('Cannot divide by zero')\r\n    }\r\n  }, [lowerVal])\r\n\r\n  useEffect(() => {\r\n    // document.addEventListener('keypress', document.getElementById('keypress').click())\r\n  }, [])\r\n\r\n  const MClear = () => {\r\n    setMem('0')\r\n  }\r\n\r\n  const MRetrieve = () => {\r\n    setLowerVal(mem)\r\n    setPrevKey('MR')\r\n  }\r\n\r\n  const MStore = () => {\r\n    setMem(lowerVal)\r\n    if (!isNaN(prevKey))\r\n      setPrevKey('MS')\r\n  }\r\n\r\n  const MAdd = () => {\r\n    setMem(myEval([mem, '+', lowerVal]))\r\n  }\r\n\r\n  const MSubtract = () => {\r\n    setMem(myEval([mem, '-', lowerVal]))\r\n  }\r\n\r\n  const handleClear = () => {\r\n    setExpression([])\r\n    setLowerVal('0')\r\n    setPrevKey(null)\r\n    setErrorMsg('')\r\n  }\r\n\r\n  const handleClearEntry = () => {\r\n    setLowerVal('0')\r\n    setPrevKey('CE')\r\n  }\r\n\r\n  const toggleSign = () => {\r\n    setLowerVal(prev => (prev * -1) + '')\r\n    setPrevKey('toggleSign')\r\n  }\r\n\r\n  const handleSqrt = () => {\r\n    // sqrt and inverse are handled the same way\r\n\r\n\r\n  }\r\n  \r\n  const handlePercent = () => {\r\n\r\n\r\n    setPrevKey()\r\n  }\r\n\r\n  const handleInverse = () => {\r\n\r\n    setPrevKey('inverse')\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (prevKey !== '=' && lowerVal !== '0') {\r\n      setLowerVal(prev => prev.length === 1 ? '0' : prev.slice(0, -1))\r\n\r\n      setPrevKey('del')\r\n    }\r\n  }\r\n\r\n  const handleDot = () => {\r\n    if (!lowerVal.includes('.')) {\r\n      if (prevKey === '=' || operRegEx.test(prevKey) \r\n      || (expression.length === 0 && lowerVal === '0'))\r\n      // prepend 0 under special cases\r\n        setLowerVal('0.')\r\n      else\r\n        setLowerVal(prev => prev + '.')\r\n      \r\n      setPrevKey('.')\r\n    }\r\n  }\r\n\r\n  const handleDigit = ({target}) => {\r\n    const newDigit = target.name;\r\n\r\n    if (!['=', 'MR', 'MS', 'hist'].includes(prevKey) && !operRegEx.test(prevKey)) {\r\n      // overwrite 0. otherwise, append\r\n      setLowerVal(prev => prev === '0' ? newDigit : prev + newDigit)\r\n    } else {\r\n      // next input overwrites lowerVal\r\n      if (prevKey === '=' || (prevKey === 'hist' && lowerVal === '0'))\r\n        setExpression([])\r\n      \r\n      setLowerVal(newDigit)\r\n    }\r\n\r\n    setPrevKey(newDigit)\r\n  }\r\n\r\n  const handleOperator = ({target}) => {\r\n    const newOperator = target.name\r\n    let newExpression = expression\r\n    let newLowerVal = lowerVal\r\n    \r\n    if (operRegEx.test(prevKey)) {\r\n      // replace operator\r\n      newExpression = [...expression.slice(0,-1), newOperator]\r\n    } else if (['.', 'CE', 'toggleSign', 'MR', 'hist'].includes(prevKey)) {\r\n      // existing expression with last item as operator will append the lower value and the newOperator\r\n      // otherwise replace the expression with the evaluation and the newOperator\r\n      // remove dot\r\n      if (lowerVal.slice(-1)[0] === '.')\r\n        newLowerVal = lowerVal.slice(0,-1)\r\n\r\n      if (operRegEx.test(expression.slice(-1))) {\r\n        newExpression = [...expression, newLowerVal]\r\n      } else {\r\n        newExpression = [newLowerVal]\r\n      }\r\n\r\n      newLowerVal = myEval(newExpression)\r\n      newExpression = newExpression.concat(newOperator)\r\n    } else if (prevKey === '=') {\r\n      // append to existing expression\r\n      newLowerVal = myEval(expression)\r\n      newExpression = [newLowerVal, newOperator]\r\n    } else {\r\n      // evaluate and display current expression with new operator\r\n      const oldExpression = [...expression, lowerVal]\r\n\r\n      newLowerVal = myEval(oldExpression)\r\n      newExpression = oldExpression.concat(newOperator)\r\n    }\r\n\r\n    // state updates\r\n    setExpression(newExpression)\r\n    setLowerVal(newLowerVal)\r\n    setPrevKey(newOperator)\r\n  }\r\n\r\n  const myEval = (stringArr) => {\r\n    return evaluate(stringArr.join('')) + ''\r\n  }\r\n\r\n  const handleEqual = () => {\r\n    // console.log('expression: ' + expression)\r\n    // console.log('prevKey: ' + prevKey)\r\n    let newExpression = expression\r\n    let newLowerVal = lowerVal\r\n\r\n    if (!operRegEx.test(expression)) {\r\n      if (prevKey !== '.') {\r\n        newExpression = [lowerVal]\r\n      } else {\r\n        // remove dot from expression and lowerVal\r\n        newExpression = [lowerVal.slice(0,-1)]\r\n        newLowerVal = lowerVal.slice(0,-1)\r\n      }\r\n    } else if (['.', 'CE', 'toggleSign', 'MR', 'hist'].includes(prevKey)) {\r\n      // existing expression with last item as operator will append the lowerVal to expression \r\n      // otherwise repeat expression on the lowerVal\r\n      // remove dot\r\n      if (lowerVal.slice(-1)[0] === '.')\r\n        newLowerVal = lowerVal.slice(0,-1)\r\n\r\n      // was last item in expression was an operator?\r\n      if (operRegEx.test(expression.slice(-1))) {\r\n        newExpression = [...expression, newLowerVal]\r\n      } else {\r\n        // use last operator and operand on curr lowerVal\r\n        const [lastOperator, lastOperand] = expression.slice(-2)\r\n\r\n        newExpression = [newLowerVal, lastOperator, lastOperand]\r\n      }\r\n\r\n      newLowerVal = myEval(newExpression)\r\n    } else if (prevKey === '=') {\r\n      // repeat last operator and operand\r\n      const [lastOperator, lastOperand] = expression.slice(-2)\r\n\r\n      newExpression = [lowerVal, lastOperator, lastOperand]\r\n      newLowerVal = myEval([...expression, lastOperator, lastOperand])\r\n    } else {\r\n      // just append\r\n      newExpression = [...expression, lowerVal]\r\n      newLowerVal = myEval(newExpression)\r\n    }\r\n\r\n    // state updates\r\n    if (cursor !== null)\r\n      setHistoryBGColorOf(cursor, 'transparent')\r\n    \r\n    // edit history directly until length is >5\r\n    let allEmptyHistories = history.filter(i => i[0] === ' ' && i[1] === ' ')\r\n    let newHistory = history\r\n    if (allEmptyHistories.length !== 0) {\r\n      newHistory[5 - allEmptyHistories.length] = [newExpression.join(''), newLowerVal]\r\n      setCursor(5 - allEmptyHistories.length)\r\n      setHistoryBGColorOf(5 - allEmptyHistories.length, 'lightblue')\r\n    } else {\r\n      newHistory = newHistory.concat([[newExpression.join(''), newLowerVal]])\r\n      setCursor(4)\r\n      setHistoryBGColorOf(cursor, 'lightblue')\r\n    }\r\n    \r\n    setHistory(newHistory)\r\n    setExpression(newExpression)\r\n    setLowerVal(newLowerVal)\r\n    setPrevKey('=')\r\n  }\r\n\r\n  const setHistoryBGColorOf = (index, color) => {\r\n    return document.getElementsByClassName('history')[index].style.backgroundColor = color\r\n  }\r\n\r\n  const handleHistory = (val, index) => () => {\r\n    if (val !== ' ') {\r\n      setLowerVal(val)\r\n      setPrevKey('hist')\r\n      if (cursor !== null) {\r\n        setHistoryBGColorOf(cursor, 'transparent')\r\n        setHistoryBGColorOf(index, 'lightblue')\r\n        setCursor(index)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleKeyPress = ({target}) => {\r\n\r\n  }\r\n\r\n  return (\r\n    <main className=\"calculator\" >\r\n      <div className=\"menu\"><span>V</span>iew&nbsp;&nbsp; <span>E</span>dit&nbsp;&nbsp; <span>H</span>elp</div>\r\n\r\n      <div className=\"display\">\r\n        <div className=\"outer-div\">\r\n          {history.slice(-5).map((i, index) =>\r\n            <div \r\n              key={index}\r\n              className=\"history\" \r\n              onClick={handleHistory(i[1], index)}\r\n              style={{\r\n                // all border-bottom should be 1px dotted except for the last one\r\n                borderBottom: i[1] !== ' ' && i[0] !== ' ' && index !== 4 ? '1px dotted black': '1px solid transparent'\r\n              }}\r\n            >{i[0]}</div>\r\n          )}\r\n        </div>\r\n        \r\n        <CalcDisplay upperVal={expression} lowerVal={lowerVal} />\r\n        <div className=\"error\">{errorMsg}</div>\r\n        <div className=\"m-icon\">{mem !== '0' ? 'M' : ''}</div>\r\n      </div>\r\n\r\n      <div className=\"keyboard\">\r\n      </div>\r\n\r\n      <div className=\"keyboard-bot\">\r\n        <CalcKey name=\"MC\" onClick={MClear}/><CalcKey name=\"MR\" onClick={MRetrieve}/><CalcKey name=\"MS\" onClick={MStore}/><CalcKey name=\"M+\" onClick={MAdd}/><CalcKey name=\"M-\" onClick={MSubtract}/><br/>\r\n        <CalcKey name=\"Del\" onClick={handleDelete}/><CalcKey name=\"CE\" onClick={handleClearEntry}/><CalcKey name=\"C\" onClick={handleClear}/><CalcKey name=\"±\" onClick={toggleSign}/><CalcKey name=\"√\" onClick={handleSqrt}/><br/>\r\n        <CalcKey name=\"7\" onClick={handleDigit}/><CalcKey name=\"8\" onClick={handleDigit}/><CalcKey name=\"9\" onClick={handleDigit}/><CalcKey name=\"/\" onClick={handleOperator}/><CalcKey name=\"%\" onClick={handlePercent} /><br/>\r\n        <CalcKey name=\"4\" onClick={handleDigit}/><CalcKey name=\"5\" onClick={handleDigit}/><CalcKey name=\"6\" onClick={handleDigit}/><CalcKey name=\"*\" onClick={handleOperator}/><CalcKey name=\"1/x\" onClick={handleInverse} /><br/>\r\n        <CalcKey name=\"1\" onClick={handleDigit} onKeyPress={handleKeyPress}/><CalcKey name=\"2\" onClick={handleDigit}/><CalcKey name=\"3\" onClick={handleDigit}/><CalcKey name=\"-\" onClick={handleOperator}/><br/>\r\n        <CalcKey name=\"0\" onClick={handleDigit}/><CalcKey name=\".\" onClick={handleDot}/><CalcKey name=\"+\" onClick={handleOperator}/><CalcKey name=\"=\" onClick={handleEqual}/>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport Calculator from './Calculator';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div>\r\n      <Calculator />\r\n    </div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}