{"version":3,"sources":["components/CalcDisplay.js","components/CalcKey.js","Calculator.js","index.js"],"names":["CalcDisplay","upperVal","lowerVal","className","CalcKey","name","onClick","Calculator","useState","expression","setExpression","setLowerVal","isReadyForOperand","setIsReadyForOperand","prevKey","setPrevKey","opsRegexp","RegExp","handleOperator","target","test","prev","slice","pop","handleDigit","useEffect","console","log","evaluate","join","length","includes","a","b","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33396307.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function CalcDisplay({upperVal, lowerVal}) {\r\n  return (\r\n    <div>\r\n      <div className=\"outer-div\">\r\n        <div className=\"inner-div sm-text\">{upperVal}</div>\r\n      </div>\r\n      <div className=\"outer-div\">\r\n        <div className=\"inner-div lg-text\">{lowerVal}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function CalcKey({name, onClick}) {\r\n  return (\r\n    <button name={name} onClick={onClick}>{name}</button>\r\n  )\r\n}","import './css/style.css';\r\nimport CalcDisplay from './components/CalcDisplay';\r\nimport CalcKey from './components/CalcKey';\r\nimport { useEffect, useState } from 'react';\r\nimport { evaluate } from 'mathjs';\r\n\r\nexport default function Calculator() {\r\n  const [expression, setExpression] = useState([]);\r\n  const [lowerVal, setLowerVal] = useState('0'); // input state\r\n  const [isReadyForOperand, setIsReadyForOperand] = useState(false);\r\n  const [prevKey, setPrevKey] = useState(null);\r\n  const opsRegexp = new RegExp('\\\\+|-|\\\\*|\\\\/|%');\r\n\r\n  const handleDelete = () => {\r\n    if (lowerVal !== '0') {\r\n      setLowerVal((prev) => (\r\n        prev.length === 1 ? '0' : prev.slice(0, -1)\r\n      ))\r\n    }\r\n  }\r\n\r\n  const handleClear = () => {\r\n    setExpression([])\r\n    setLowerVal('0')\r\n    setIsReadyForOperand(false)\r\n    setPrevKey(null)\r\n  }\r\n\r\n  const handleClearEntry = () => {\r\n    setLowerVal('0')\r\n    setPrevKey(null)\r\n  }\r\n\r\n  const handleOperator = () => ({target}) => {\r\n    // if prevKey was an operator, replace operator\r\n    if (opsRegexp.test(prevKey)) {\r\n      // edge case: operator, dot, equal\r\n      setExpression((prev) => {\r\n        if (opsRegexp.test(prev.slice(-1))) \r\n          prev.pop()\r\n        return [...prev, target.name]\r\n      })\r\n    // edge case for dot input\r\n    } else if (prevKey === '.') {\r\n      setLowerVal((prev) => prev.slice(0, -1))\r\n      setExpression((prev) => [...prev, lowerVal.slice(0, -1), target.name])\r\n    // otherwise, append lowerVal and operator to the expression\r\n    } else {\r\n      setExpression((prev) => [...prev, lowerVal, target.name])\r\n    }\r\n    setPrevKey(target.name)\r\n  }\r\n\r\n  const handleDot = () => {\r\n    if (!lowerVal.includes('.')) {\r\n      setLowerVal((prev) => (prev + '.'))\r\n    }\r\n    setPrevKey('.')\r\n  }\r\n\r\n  const handleDigit = () => ({target}) => {\r\n    // if prevKey was an operator, then next input should overwrite lowerVal\r\n    if (opsRegexp.test(prevKey)) {\r\n      setLowerVal(target.name)\r\n    // otherwise, if 0, then overwrite otherwise append\r\n    } else {\r\n      setLowerVal((prev) => (\r\n        prev === '0' ? target.name : prev + target.name\r\n      ));\r\n    }\r\n    setPrevKey(target.name)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // rerenders the display and evaluates the expression when = is pressed\r\n    if (isReadyForOperand) {\r\n      console.log(expression)\r\n      setLowerVal(evaluate(expression.join('')))\r\n      setIsReadyForOperand(false)\r\n      setPrevKey('=')\r\n    }\r\n  }, [isReadyForOperand, expression])\r\n\r\n  const handleEqual = () => () => {\r\n    // repeat last expression if previous input was equals\r\n    if (prevKey === '=') {\r\n      setExpression((prev) => {\r\n        const [a] = prev.slice(-1), [b] = prev.slice(-2)\r\n        return [...prev, b, a]\r\n      })\r\n    // otherwise just append\r\n    } else {\r\n      setExpression((prev) => ([...prev, lowerVal]))\r\n    }\r\n\r\n    setIsReadyForOperand(true)\r\n    setPrevKey('=')\r\n  }\r\n\r\n  return (\r\n    <div className=\"calculator\" >\r\n      <div className=\"display\">\r\n        <CalcDisplay upperVal={expression} lowerVal={lowerVal} />\r\n      </div>\r\n      <div className=\"keyboard\">\r\n      </div>\r\n      <div className=\"keyboard-bot\">\r\n        <CalcKey name=\"Del\" onClick={handleDelete}/><CalcKey name=\"CE\" onClick={handleClearEntry}/><CalcKey name=\"C\" onClick={handleClear}/><CalcKey name=\"±\"/><CalcKey name=\"√\" /><br/>\r\n        <CalcKey name=\"7\" onClick={handleDigit()}/><CalcKey name=\"8\" onClick={handleDigit()}/><CalcKey name=\"9\" onClick={handleDigit()}/><CalcKey name=\"/\" onClick={handleOperator()}/><CalcKey name=\"%\" onClick={handleOperator()}/><br/>\r\n        <CalcKey name=\"4\" onClick={handleDigit()}/><CalcKey name=\"5\" onClick={handleDigit()}/><CalcKey name=\"6\" onClick={handleDigit()}/><CalcKey name=\"*\" onClick={handleOperator()}/><CalcKey name=\"1/x\" /><br/>\r\n        <CalcKey name=\"1\" onClick={handleDigit()}/><CalcKey name=\"2\" onClick={handleDigit()}/><CalcKey name=\"3\" onClick={handleDigit()}/><CalcKey name=\"-\" onClick={handleOperator()}/><br/>\r\n        <CalcKey name=\"0\" onClick={handleDigit()}/><CalcKey name=\".\" onClick={handleDot}/><CalcKey name=\"+\" onClick={handleOperator()}/><CalcKey name=\"=\" onClick={handleEqual()}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport Calculator from './Calculator';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div>\r\n      <Calculator />\r\n    </div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}